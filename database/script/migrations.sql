CREATE SCHEMA IF NOT EXISTS necesidades;
ALTER SCHEMA necesidades OWNER TO desarrollooas;
SET search_path TO pg_catalog,public,necesidades;
CREATE TABLE necesidades.necesidad (id serial NOT NULL,consecutivo_solicitud int4 NOT NULL,consecutivo_necesidad int4 NULL,vigencia varchar NOT NULL,objeto varchar NOT NULL,justificacion varchar NULL,estudio_mercado varchar NULL,analisis_riesgo varchar NULL,fecha_solicitud timestamp NOT NULL,valor numeric(20,7) NOT NULL,area_funcional int4 NOT NULL,tipo_duracion_necesidad_id int4 NOT NULL,dias_duracion int4 NULL,modalidad_seleccion_id int4 NULL,tipo_contrato_id int4 NULL,plan_anual_adquisiciones_id int4 NOT NULL,tipo_contrato_necesidad_id int4 NOT NULL,tipo_financiacion_necesidad_id int4 NULL,tipo_necesidad_id int4 NOT NULL,justificacion_rechazo int4 NULL,dependencia_necesidad_id int4 NOT NULL,estado_necesidad_id int4 NOT NULL,activo bool NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_necesidad PRIMARY KEY (id));
ALTER TABLE necesidades.necesidad OWNER TO desarrollooas;
CREATE TABLE necesidades.marco_legal_necesidad (id serial NOT NULL,marco_legal_id integer NOT NULL,necesidad_id integer NOT NULL,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_marco_legal_necesidad PRIMARY KEY (id));
ALTER TABLE necesidades.marco_legal_necesidad OWNER TO desarrollooas;
CREATE TABLE necesidades.tipo_financiacion_necesidad (id serial NOT NULL,nombre varchar,descripcion varchar,codigo_abreviacion varchar,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_tipo_financiacion_necesidad PRIMARY KEY (id));
ALTER TABLE necesidades.tipo_financiacion_necesidad OWNER TO desarrollooas;
CREATE TABLE necesidades.producto_rubro_necesidad (id serial NOT NULL,rubro_necesidad_id integer NOT NULL,producto_id varchar NOT NULL,monto_parcial numeric(20,7) NOT NULL,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_producto_rubro_necesidad PRIMARY KEY (id));
ALTER TABLE necesidades.producto_rubro_necesidad OWNER TO desarrollooas;
CREATE TABLE necesidades.modalidad_seleccion (id serial NOT NULL,nombre varchar,descripcion varchar,codigo_abreviacion varchar NOT NULL,numero_orden integer NOT NULL,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_modalidad_seleccion PRIMARY KEY (id));
ALTER TABLE necesidades.modalidad_seleccion OWNER TO desarrollooas;
CREATE TABLE necesidades.estado_necesidad (id serial NOT NULL,nombre varchar,descripcion varchar,codigo_abreviacionn varchar,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_estado_necesidad PRIMARY KEY (id));
ALTER TABLE necesidades.estado_necesidad OWNER TO desarrollooas;
CREATE TABLE necesidades.marco_legal (id serial NOT NULL,nombre_documento varchar NOT NULL,enlace varchar NOT NULL,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_marco_legal PRIMARY KEY (id));
ALTER TABLE necesidades.marco_legal OWNER TO desarrollooas;
CREATE TABLE necesidades.fuente_rubro_necesidad (id serial NOT NULL,fuente_id varchar NOT NULL,rubro_necesidad_id integer NOT NULL,monto_parcial numeric(20,7) NOT NULL,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_fuente_rubro_necesidad PRIMARY KEY (id));
ALTER TABLE necesidades.fuente_rubro_necesidad OWNER TO desarrollooas;
CREATE TABLE necesidades.actividad_meta (id serial NOT NULL,actividad_id varchar NOT NULL,meta_rubro_necesidad_id integer NOT NULL,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_actividad_meta PRIMARY KEY (id));
CREATE TABLE necesidades.fuente_actividad (id serial NOT NULL,fuente_id varchar NOT NULL,actividad_meta_necesidad_id int4 NOT NULL,monto_parcial numeric(20,7) NOT NULL,activo bool NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_fuente_actividad PRIMARY KEY (id));
ALTER TABLE necesidades.actividad_meta OWNER TO desarrollooas;
ALTER TABLE necesidades.fuente_actividad OWNER TO desarrollooas;
CREATE TABLE necesidades.producto_catalogo_necesidad (id serial NOT NULL,catalogo_id integer NOT NULL,necesidad_id integer NOT NULL,unidad_id integer NOT NULL,iva_id integer,cantidad integer NOT NULL,valor numeric(20,7) NOT NULL,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_producto_catalogo_necesidad PRIMARY KEY (id));
ALTER TABLE necesidades.producto_catalogo_necesidad OWNER TO desarrollooas;
CREATE TABLE necesidades.tipo_contrato_necesidad (id serial NOT NULL,nombre varchar,descripcion varchar,codigo_abreviacion varchar,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_tipo_contrato_necesidad PRIMARY KEY (id));
ALTER TABLE necesidades.tipo_contrato_necesidad OWNER TO desarrollooas;
CREATE TABLE necesidades.rubro_necesidad (id serial NOT NULL,rubro_id varchar NOT NULL,necesidad_id integer NOT NULL,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_rubro_necesidad PRIMARY KEY (id));
ALTER TABLE necesidades.rubro_necesidad OWNER TO desarrollooas;
CREATE TABLE necesidades.necesidad_rechazada (id serial NOT NULL,necesidad_id integer NOT NULL,justificacion varchar NOT NULL,fecha_rechazo timestamp NOT NULL,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_necesidad_rechazada PRIMARY KEY (id));
ALTER TABLE necesidades.necesidad_rechazada OWNER TO desarrollooas;
CREATE TABLE necesidades.requisito_minimo (id serial NOT NULL,producto_catalogo_necesidad_id integer NOT NULL,descripcion varchar NOT NULL,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_requisito_minimo PRIMARY KEY (id));
CREATE TABLE necesidades.requisito_minimo_necesidad (id serial NOT NULL,necesidad_id integer NOT NULL,descripcion varchar NOT NULL,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_requisito_minimo_necesidad PRIMARY KEY (id));
ALTER TABLE necesidades.requisito_minimo OWNER TO desarrollooas;
ALTER TABLE necesidades.requisito_minimo_necesidad OWNER TO desarrollooas;
CREATE TABLE necesidades.dependencia_necesidad (id serial NOT NULL,jefe_dep_solicitante_id integer NOT NULL,jefe_dep_destino_id integer NOT NULL,supervisor_id integer,interventor_id integer,ordenador_gasto_id integer,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_responsables_necesidad PRIMARY KEY (id));
ALTER TABLE necesidades.dependencia_necesidad OWNER TO desarrollooas;
CREATE TABLE necesidades.detalle_prestacion_servicio (id serial NOT NULL,perfil_id integer NOT NULL,nucleo_conocimiento_id integer,necesidad_id integer NOT NULL,cantidad integer NOT NULL,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_detalle_prestacion_servicio PRIMARY KEY (id));
ALTER TABLE necesidades.detalle_prestacion_servicio OWNER TO desarrollooas;
CREATE TABLE necesidades.actividad_especifica_necesidad (id serial NOT NULL,necesidad_id integer NOT NULL,descripcion varchar NOT NULL,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_actividad_especifica_necesidad PRIMARY KEY (id));
ALTER TABLE necesidades.actividad_especifica_necesidad OWNER TO desarrollooas;
CREATE TABLE necesidades.actividad_economica_necesidad (id serial NOT NULL,actividad_economica_id integer NOT NULL,necesidad_id integer NOT NULL,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_actividad_economica_necesidad PRIMARY KEY (id));
ALTER TABLE necesidades.actividad_economica_necesidad OWNER TO desarrollooas;
CREATE TABLE necesidades.tipo_necesidad (id serial NOT NULL,nombre varchar,descripcion varchar,codigo_abreviacion varchar,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_tipo_necesidad PRIMARY KEY (id));
ALTER TABLE necesidades.tipo_necesidad OWNER TO desarrollooas;
CREATE TABLE necesidades.tipo_duracion_necesidad (id serial NOT NULL,nombre varchar,descripcion varchar,codigo_abreviacion varchar,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_tipo_duracion_necesidad PRIMARY KEY (id));
ALTER TABLE necesidades.tipo_duracion_necesidad OWNER TO desarrollooas;
CREATE TABLE necesidades.meta_rubro_necesidad (id serial NOT NULL,meta_id varchar NOT NULL,rubro_necesidad_id integer NOT NULL,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_meta_rubro_necesidad PRIMARY KEY (id));
ALTER TABLE necesidades.meta_rubro_necesidad OWNER TO desarrollooas;
CREATE TABLE necesidades.detalle_servicio_necesidad (id serial NOT NULL,tipo_servicio_id integer NOT NULL,valor numeric(20,7) NOT NULL,descripcion varchar NOT NULL,necesidad_id integer NOT NULL,iva_id integer NOT NULL,activo boolean NOT NULL DEFAULT true,fecha_creacion timestamp NOT NULL,fecha_modificacion timestamp NOT NULL,CONSTRAINT pk_detalle_prestacion_servicio_cp PRIMARY KEY (id));
ALTER TABLE necesidades.detalle_servicio_necesidad OWNER TO desarrollooas;
ALTER TABLE necesidades.necesidad ADD CONSTRAINT fk_necesidad_tipo_duracion_necesidad FOREIGN KEY (tipo_duracion_necesidad_id) REFERENCES necesidades.tipo_duracion_necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.necesidad ADD CONSTRAINT fk_necesidad_tipo_necesidad FOREIGN KEY (tipo_necesidad_id) REFERENCES necesidades.tipo_necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.necesidad ADD CONSTRAINT fk_necesidad_tipo_contrato_necesidad FOREIGN KEY (tipo_contrato_necesidad_id) REFERENCES necesidades.tipo_contrato_necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.necesidad ADD CONSTRAINT fk_necesidad_estado_necesidad FOREIGN KEY (estado_necesidad_id) REFERENCES necesidades.estado_necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.necesidad ADD CONSTRAINT fk_necesidad_estado_modalidad_seleccion FOREIGN KEY (modalidad_seleccion_id) REFERENCES necesidades.modalidad_seleccion (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.necesidad ADD CONSTRAINT fk_necesidad_tipo_financiacion_necesidad FOREIGN KEY (tipo_financiacion_necesidad_id) REFERENCES necesidades.tipo_financiacion_necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.necesidad ADD CONSTRAINT fk_necesidad_dependencia_necesidad FOREIGN KEY (dependencia_necesidad_id) REFERENCES necesidades.dependencia_necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.marco_legal_necesidad ADD CONSTRAINT fk_marco_legal_necesidad_marco_legal FOREIGN KEY (marco_legal_id) REFERENCES necesidades.marco_legal (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.marco_legal_necesidad ADD CONSTRAINT fk_marco_legal_necesidad_necesidad FOREIGN KEY (necesidad_id) REFERENCES necesidades.necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.producto_rubro_necesidad ADD CONSTRAINT fk_producto_rubro_necesidad_rubro_necesidad FOREIGN KEY (rubro_necesidad_id) REFERENCES necesidades.rubro_necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.fuente_rubro_necesidad ADD CONSTRAINT fk_fuente_rubro_necesidad_rubro_necesidad FOREIGN KEY (rubro_necesidad_id) REFERENCES necesidades.rubro_necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.actividad_meta ADD CONSTRAINT fk_actividad_meta_rubro_necesidad FOREIGN KEY (meta_rubro_necesidad_id) REFERENCES necesidades.meta_rubro_necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.producto_catalogo_necesidad ADD CONSTRAINT fk_producto_catalogo_necesidad_necesidad FOREIGN KEY (necesidad_id) REFERENCES necesidades.necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.rubro_necesidad ADD CONSTRAINT fk_rubro_necesidad_necesidad FOREIGN KEY (necesidad_id) REFERENCES necesidades.necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.necesidad_rechazada ADD CONSTRAINT fk_necesidad_rechazada_necesidad FOREIGN KEY (necesidad_id) REFERENCES necesidades.necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.requisito_minimo ADD CONSTRAINT fk_requisito_minimo_producto_catalogo_necesidad FOREIGN KEY (producto_catalogo_necesidad_id) REFERENCES necesidades.producto_catalogo_necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.requisito_minimo_necesidad ADD CONSTRAINT fk_requisito_minimo_necesidad_necesidad FOREIGN KEY (necesidad_id) REFERENCES necesidades.necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.detalle_prestacion_servicio ADD CONSTRAINT fk_detalle_prestacion_servicio_necesidad FOREIGN KEY (necesidad_id) REFERENCES necesidades.necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.actividad_especifica_necesidad ADD CONSTRAINT fk_actividad_especifica_necesidad_necesidad FOREIGN KEY (necesidad_id) REFERENCES necesidades.necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.actividad_economica_necesidad ADD CONSTRAINT fk_actividad_economica_necesidad_necesidad FOREIGN KEY (necesidad_id) REFERENCES necesidades.necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.meta_rubro_necesidad ADD CONSTRAINT fk_meta_rubro_necesidad_rubro_necesidad FOREIGN KEY (rubro_necesidad_id) REFERENCES necesidades.rubro_necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.detalle_servicio_necesidad ADD CONSTRAINT fk_detalle_prestacion_servicio_necesidad_cp FOREIGN KEY (necesidad_id) REFERENCES necesidades.necesidad (id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
ALTER TABLE necesidades.fuente_actividad ADD CONSTRAINT fk_fuente_actividad_meta FOREIGN KEY (actividad_meta_necesidad_id) REFERENCES necesidades.actividad_meta(id) MATCH FULL ON DELETE CASCADE ON UPDATE NO ACTION;
INSERT INTO necesidades.tipo_financiacion_necesidad (nombre, descripcion, codigo_abreviacion, activo, fecha_creacion, fecha_modificacion) VALUES('Inversión', 'Inversión', 'I', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.tipo_financiacion_necesidad (nombre, descripcion, codigo_abreviacion, activo, fecha_creacion, fecha_modificacion) VALUES('Funcionamiento', 'Funcionamiento', 'F', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.modalidad_seleccion (nombre, descripcion, codigo_abreviacion, numero_orden, activo, fecha_creacion, fecha_modificacion) VALUES('Licitación pública', 'Licitación pública', 'LP', 1, true, current_timestamp, current_timestamp);
INSERT INTO necesidades.modalidad_seleccion (nombre, descripcion, codigo_abreviacion, numero_orden, activo, fecha_creacion, fecha_modificacion) VALUES('Selección abreviada', 'Selección abreviada', 'SA', 2, true, current_timestamp, current_timestamp);
INSERT INTO necesidades.modalidad_seleccion (nombre, descripcion, codigo_abreviacion, numero_orden, activo, fecha_creacion, fecha_modificacion) VALUES('Concurso de méritos', 'Concurso de méritos', 'CM', 3, true, current_timestamp, current_timestamp);
INSERT INTO necesidades.modalidad_seleccion (nombre, descripcion, codigo_abreviacion, numero_orden, activo, fecha_creacion, fecha_modificacion) VALUES('Mínima cuantía', 'Mínima cuantía', 'MC', 4, true, current_timestamp, current_timestamp);
INSERT INTO necesidades.modalidad_seleccion (nombre, descripcion, codigo_abreviacion, numero_orden, activo, fecha_creacion, fecha_modificacion) VALUES('Contratación directa', 'Contratación directa', 'CD', 5, true, current_timestamp, current_timestamp);
INSERT INTO necesidades.modalidad_seleccion (nombre, descripcion, codigo_abreviacion, numero_orden, activo, fecha_creacion, fecha_modificacion) VALUES('Contratación directa por urgencia manifiesta (*)', 'Contratación directa por urgencia manifiesta (*)', 'UM', 6, true, current_timestamp, current_timestamp);
INSERT INTO necesidades.modalidad_seleccion (nombre, descripcion, codigo_abreviacion, numero_orden, activo, fecha_creacion, fecha_modificacion) VALUES('Convocatoria pública', 'Convocatoria pública', 'CP', 7, true, current_timestamp, current_timestamp);
INSERT INTO necesidades.modalidad_seleccion (nombre, descripcion, codigo_abreviacion, numero_orden, activo, fecha_creacion, fecha_modificacion) VALUES('Otra', 'Otra', 'O', 8, true, current_timestamp, current_timestamp);
INSERT INTO necesidades.estado_necesidad (nombre, descripcion, codigo_abreviacionn, activo, fecha_creacion, fecha_modificacion) VALUES('Solicitada', 'Solicitud registrada', 'S', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.estado_necesidad (nombre, descripcion, codigo_abreviacionn, activo, fecha_creacion, fecha_modificacion) VALUES('Aprobada', 'Necesidad aprobada por el ordenador del gasto', 'A', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.estado_necesidad (nombre, descripcion, codigo_abreviacionn, activo, fecha_creacion, fecha_modificacion) VALUES('Rechazada', 'Necesidad rechazada por el ordenador del gasto', 'R', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.estado_necesidad (nombre, descripcion, codigo_abreviacionn, activo, fecha_creacion, fecha_modificacion) VALUES('Anulada', 'Necesidad anulada luego de haber sido aprobada o en estado Nueva si se hizo cambio de vigencia', 'AN', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.estado_necesidad (nombre, descripcion, codigo_abreviacionn, activo, fecha_creacion, fecha_modificacion) VALUES('Modificada', 'Necesidad modificada luego de estar en estado nueva o rechazada', 'M', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.estado_necesidad (nombre, descripcion, codigo_abreviacionn, activo, fecha_creacion, fecha_modificacion) VALUES('Enviada', 'Necesidad enviada al ordenador del gasto para que este la califique, aqui ya no es posible modificarla', 'E', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.estado_necesidad (nombre, descripcion, codigo_abreviacionn, activo, fecha_creacion, fecha_modificacion) VALUES('Cdp Solicitado', 'Solicitud de CDP creada', 'CS', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.estado_necesidad (nombre, descripcion, codigo_abreviacionn, activo, fecha_creacion, fecha_modificacion) VALUES('Guardada', 'Guardada sin enviar', 'G', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.estado_necesidad (nombre, descripcion, codigo_abreviacionn, activo, fecha_creacion, fecha_modificacion) VALUES('CDP Expedido', 'CDP expedido y por aprobar', 'CDPE', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.estado_necesidad (nombre, descripcion, codigo_abreviacionn, activo, fecha_creacion, fecha_modificacion) VALUES('CDP Aprobado', 'CDP aprobado', 'CDPA', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.tipo_contrato_necesidad (nombre, descripcion, codigo_abreviacion, activo, fecha_creacion, fecha_modificacion) VALUES('Compra', 'Aqui van las compras (Arka)', 'C', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.tipo_contrato_necesidad (nombre, descripcion, codigo_abreviacion, activo, fecha_creacion, fecha_modificacion) VALUES('Prestación de servicio', 'Aqui van las contrataciones de Prestación de Servicio', 'CPS', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.tipo_contrato_necesidad (nombre, descripcion, codigo_abreviacion, activo, fecha_creacion, fecha_modificacion) VALUES('No aplica', 'Parámetro para las necesidades que no sean de contratación', 'NA', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.tipo_contrato_necesidad (nombre, descripcion, codigo_abreviacion, activo, fecha_creacion, fecha_modificacion) VALUES('Compra y servicio', 'Aqui van las compras y servicio', 'CS', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.tipo_contrato_necesidad (nombre, descripcion, codigo_abreviacion, activo, fecha_creacion, fecha_modificacion) VALUES('Servicio', 'Aqui van los servicios generales', 'S', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.tipo_necesidad (nombre, descripcion, codigo_abreviacion, activo, fecha_creacion, fecha_modificacion) VALUES('Contratación', 'Necesidades de compras o adquisición de servicios que serán estipuladas en un contrato', 'C', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.tipo_necesidad (nombre, descripcion, codigo_abreviacion, activo, fecha_creacion, fecha_modificacion) VALUES('Servicios públicos', 'Servicios públicos', 'SP', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.tipo_duracion_necesidad (nombre, descripcion, codigo_abreviacion, activo, fecha_creacion, fecha_modificacion) VALUES('Duración', 'Duración', 'D', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.tipo_duracion_necesidad (nombre, descripcion, codigo_abreviacion, activo, fecha_creacion, fecha_modificacion) VALUES('Único pago', 'Único pago', 'UP', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.tipo_duracion_necesidad (nombre, descripcion, codigo_abreviacion, activo, fecha_creacion, fecha_modificacion) VALUES('Único pago / Hasta agotar presupuesto', 'Único pago / Hasta agotar presupuesto', 'UPAP', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.tipo_duracion_necesidad (nombre, descripcion, codigo_abreviacion, activo, fecha_creacion, fecha_modificacion) VALUES('Hasta agotar presupuesto', 'Hasta agotar presupuesto', 'AP', true, current_timestamp, current_timestamp);
INSERT INTO necesidades.marco_legal (nombre_documento, enlace, activo, fecha_creacion, fecha_modificacion) VALUES('Acuerdo 03 del 11 de Marzo de 2015 del CSU', 'http://sgral.udistrital.edu.co/xdata/csu/acu_2015-03.pdf', true,  current_timestamp, current_timestamp);
INSERT INTO necesidades.marco_legal (nombre_documento, enlace, activo, fecha_creacion, fecha_modificacion) VALUES('Circular 025 de 2015 Evaluación de Proveedores', 'https://www.udistrital.edu.co/files/CIRCULAR_025_de_2015_Evaluacion_de_Proveedores.pdf', true,  current_timestamp, current_timestamp);
INSERT INTO necesidades.marco_legal (nombre_documento, enlace, activo, fecha_creacion, fecha_modificacion) VALUES('Resolución 132 del 25 de Marzo de 2015', 'http://sgral.udistrital.edu.co/xdata/rec/res_2015-263.pdf', true,  current_timestamp, current_timestamp);